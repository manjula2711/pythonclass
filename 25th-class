#dictionaries
#sets
#recursion/problem statements -tower of hamioi
#object oriented programming

#RECURSION
def f(n):
    if n<=10:
        return
    print(n-1)
    f(n-1)
    print(n-1)
f(13)  #12 11 10 10 11 12
#time complexity  - O(n) linear


#RECURSIVE  SOLUTION TO PRINT NTH FIBNOCCI NUMBER
def nthFibonaciNumber(n):
    if n<=0:
        return -1
    if n==1:
        return 0
    if n==2:
        return 1
    
    return nthFibonaciNumber(n-1)+nthFibonaciNumber(n-2)
print(nthFibonaciNumber(10))#34





def sumOfFibonaciNumber(n):
    if n<=0:
        return -1
    if n==1:
        return 0
    if n==2:
        return 1
    first,second =0,1
    result=first+second
    for i in range(0,n-2):
        next = first + second
        result+=next
        first = second
        second = next
    print(result)
sumOfFibonaciNumber(5)#7

#sum of n numbers in fibnoci series
sum=1
def fib(n):
    if n<=0:
        return -1
    if n==1:
        return 0
    if n==2:
        return 1
    return fib(n-1)+fib(n-2)+1
print(fib(5))
    
 