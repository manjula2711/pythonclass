#dictionaries
#sets
#recursion/problem statements -tower of hamioi
#object oriented programming

#RECURSION
def f(n):
    if n<=10:
        return
    print(n-1)
    f(n-1)
    print(n-1)
f(13)  #12 11 10 10 11 12
#time complexity  - O(n) linear


#RECURSIVE  SOLUTION TO PRINT NTH FIBNOCCI NUMBER
def nthFibonaciNumber(n):
    if n<=0:
        return -1
    if n==1:
        return 0
    if n==2:
        return 1
    
    return nthFibonaciNumber(n-1)+nthFibonaciNumber(n-2)
print(nthFibonaciNumber(10))#34





def sumOfFibonaciNumber(n):
    if n<=0:
        return -1
    if n==1:
        return 0
    if n==2:
        return 1
    first,second =0,1
    result=first+second
    for i in range(0,n-2):
        next = first + second
        result+=next
        first = second
        second = next
    print(result)
sumOfFibonaciNumber(5)#7

#sum of n numbers in fibnoci series
sum=1
def fib(n):
    if n<=0:
        return -1
    if n==1:
        return 0
    if n==2:
        return 1
    return fib(n-1)+fib(n-2)+1
print(fib(5))
    




#SETS
#1.sets are unordered and unindexed
#2.sets do not allow duplicates elements
#4.insertion order is not mentained
arr = [1,2,1,2,1,2,3,4,5,3,4,5,6,7]
my_set=set(arr)
print(my_set)
my_set.add(34)#add 34 to the my_set
my_set.clear()
my_set.copy()


#DICTIONARIES
#1.key-value pair
#2.orderd
#3.changeable
#4.no duplicates
my_dict = { "name": "manjula",
            "age" : 20
          }

print(type(my_dict))
print(my_dict["name"])
my_dict["name"]="manju"
print(my_dict["name"])

updated_name={
    "name" : "swetha"
}
my_dict.update(updated_name)
print(my_dict["name"])



#OBJECT ORIENTED PROGRAMMING
# class is a blueprint of object
#logic should revolue around the concept of classes and instance of those classes
#object-instance of class
class car:
    engineType = "strongest Engine"
    numbersOfTyers = 4
    numberOfWindow = 6
    isFridgeAvailable = True

car1 = car()
print(car1.engineType)




 
