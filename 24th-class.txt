#functions
#advantanges
#1.readable,clean,lightweight and 2. reusability of code
#how to define and call a function
def add():
   a=10
   b=20
   print(a+b)
add()

def add():
    a=int(input())
    b=int(input())
    print(a+b)
add()
  
def add():
    try:
      a=int(input())
    except ValueError as err:
      print(err)
    try:
      b=int(input())
    except ValueError as err:
      print(err)
    print(a+b)

add()

def addNumbers():
   a=10
   b=20
   return(a+b)

sum=addNumbers()
print(sum)


def addNumbers(a,b):#a,b are arguments
   return a+b
sum=addNumbers(10,30)#parameters
print(sum)

def returningMultipleValues():
   return 10,20,30
output=returningMultipleValues()
print(output)



def doJob(n):
   if n<=2:
      return
   print(n)
   doJob(n-1)
   print(n)

doJob(10)   #10 9 8 7 6 5 4 3 3 4 5 6 7 8 9 10

def doJob2(n):
   if n<=5:
      return
   doJob2(n-1)
   print(n)
   doJob2(n-1)
   print(n)
doJob2(8) #66766786676678


def fib(n):
   if n<=0:
      print("invalid argument")
      return -1
   if n==1:
      print(0)
      return -1
   if n==2:
      print(o," ",1)
      return -1
   a=0
   b=1
   print(a," ",b)
   count =3
   while count <= n:
      next =a+b
      print(next,end=" ")
      a=b
      b=next
      count+=1

print(fib(10))

def findLcm(a,b):
    if a>b:
      greater=a
    else:
      greater=b
     
    while True:
      if((greater % a==0) and (greater%b)==0):
       lcm = greater
       break
    greater+=1
    return lcm
print(findLcm(18,20))


      
